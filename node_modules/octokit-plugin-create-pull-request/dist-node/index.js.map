{"version":3,"file":"index.js","sources":["../dist-src/value-to-tree-object.js","../dist-src/create-tree.js","../dist-src/create-commit.js","../dist-src/create-pull-request.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["export async function valueToTreeObject(octokit, owner, repo, path, value) {\n    // Text files can be changed through the .content key\n    if (typeof value === \"string\") {\n        return {\n            path,\n            mode: \"100644\",\n            content: value,\n        };\n    }\n    // Binary files need to be created first using the git blob API,\n    // then changed by referencing in the .sha key\n    const { data } = await octokit.request(\"POST /repos/:owner/:repo/git/blobs\", {\n        owner,\n        repo,\n        ...value,\n    });\n    const blobSha = data.sha;\n    return {\n        path,\n        mode: \"100644\",\n        sha: blobSha,\n    };\n}\n","import { valueToTreeObject } from \"./value-to-tree-object\";\nexport async function createTree(state, changes) {\n    const { octokit, owner, repo, fork, latestCommitSha, latestCommitTreeSha, } = state;\n    const tree = (await Promise.all(Object.keys(changes.files).map(async (path) => {\n        const value = changes.files[path];\n        if (value === null) {\n            // Deleting a non-existent file from a tree leads to an \"GitRPC::BadObjectState\" error,\n            // so we only attempt to delete the file if it exists.\n            try {\n                // https://developer.github.com/v3/repos/contents/#get-contents\n                await octokit.request(\"HEAD /repos/:owner/:repo/contents/:path\", {\n                    owner: fork,\n                    repo,\n                    ref: latestCommitSha,\n                    path,\n                });\n                return {\n                    path,\n                    mode: \"100644\",\n                    sha: null,\n                };\n            }\n            catch (error) {\n                return;\n            }\n        }\n        // When passed a function, retrieve the content of the file, pass it\n        // to the function, then return the result\n        if (typeof value === \"function\") {\n            const { data: file } = await octokit.request(\"GET /repos/:owner/:repo/contents/:path\", {\n                owner: fork,\n                repo,\n                ref: latestCommitSha,\n                path,\n            });\n            const result = await value(file);\n            return valueToTreeObject(octokit, owner, repo, path, result);\n        }\n        return valueToTreeObject(octokit, owner, repo, path, value);\n    }))).filter(Boolean);\n    // https://developer.github.com/v3/git/trees/#create-a-tree\n    const { data: { sha: newTreeSha }, } = await octokit.request(\"POST /repos/:owner/:repo/git/trees\", {\n        owner: fork,\n        repo,\n        base_tree: latestCommitTreeSha,\n        tree,\n    });\n    return newTreeSha;\n}\n","export async function createCommit(state, changes) {\n    const { octokit, repo, fork, latestCommitSha } = state;\n    // https://developer.github.com/v3/git/commits/#create-a-commit\n    const { data: latestCommit } = await octokit.request(\"POST /repos/:owner/:repo/git/commits\", {\n        owner: fork,\n        repo,\n        message: changes.commit,\n        tree: state.latestCommitTreeSha,\n        parents: [latestCommitSha],\n    });\n    return latestCommit.sha;\n}\n","import { createTree } from \"./create-tree\";\nimport { createCommit } from \"./create-commit\";\nexport async function octokitCreatePullRequest(octokit, { owner, repo, title, body, base, head, changes: changesOption }) {\n    const changes = Array.isArray(changesOption)\n        ? changesOption\n        : [changesOption];\n    if (changes.length === 0)\n        throw new Error('[octokit-plugin-create-pull-request] \"changes\" cannot be an empty array');\n    const state = { octokit, owner, repo };\n    // https://developer.github.com/v3/repos/#get-a-repository\n    const { data: repository } = await octokit.request(\"GET /repos/:owner/:repo\", {\n        owner,\n        repo,\n    });\n    if (!repository.permissions) {\n        throw new Error(\"[octokit-plugin-create-pull-request] Missing authentication\");\n    }\n    if (!base) {\n        base = repository.default_branch;\n    }\n    state.fork = owner;\n    if (!repository.permissions.push) {\n        // https://developer.github.com/v3/users/#get-the-authenticated-user\n        const user = await octokit.request(\"GET /user\");\n        // https://developer.github.com/v3/repos/forks/#list-forks\n        const forks = await octokit.request(\"GET /repos/:owner/:repo/forks\", {\n            owner,\n            repo,\n        });\n        const hasFork = forks.data.find((fork) => fork.owner.login === user.data.login);\n        if (!hasFork) {\n            // https://developer.github.com/v3/repos/forks/#create-a-fork\n            await octokit.request(\"POST /repos/:owner/:repo/forks\", {\n                owner,\n                repo,\n            });\n        }\n        state.fork = user.data.login;\n    }\n    // https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository\n    const { data: [latestCommit], } = await octokit.request(\"GET /repos/:owner/:repo/commits\", {\n        owner,\n        repo,\n        sha: base,\n        per_page: 1,\n    });\n    state.latestCommitSha = latestCommit.sha;\n    state.latestCommitTreeSha = latestCommit.commit.tree.sha;\n    for (const change of changes) {\n        if (change.files && Object.keys(change.files).length) {\n            state.latestCommitTreeSha = await createTree(state, change);\n        }\n        state.latestCommitSha = await createCommit(state, change);\n    }\n    // https://developer.github.com/v3/git/refs/#create-a-reference\n    await octokit.request(\"POST /repos/:owner/:repo/git/refs\", {\n        owner: state.fork,\n        repo,\n        sha: state.latestCommitSha,\n        ref: `refs/heads/${head}`,\n    });\n    // https://developer.github.com/v3/pulls/#create-a-pull-request\n    return await octokit.request(\"POST /repos/:owner/:repo/pulls\", {\n        owner,\n        repo,\n        head: `${state.fork}:${head}`,\n        base,\n        title,\n        body,\n    });\n}\n","export const VERSION = \"3.4.0\";\n","import { octokitCreatePullRequest } from \"./create-pull-request\";\nimport { VERSION } from \"./version\";\n/**\n * @param octokit Octokit instance\n */\nexport function createPullRequest(octokit) {\n    return {\n        createPullRequest: octokitCreatePullRequest.bind(null, octokit),\n    };\n}\ncreatePullRequest.VERSION = VERSION;\n"],"names":["valueToTreeObject","octokit","owner","repo","path","value","mode","content","data","request","blobSha","sha","createTree","state","changes","fork","latestCommitSha","latestCommitTreeSha","tree","Promise","all","Object","keys","files","map","ref","error","file","result","filter","Boolean","newTreeSha","base_tree","createCommit","latestCommit","message","commit","parents","octokitCreatePullRequest","title","body","base","head","changesOption","Array","isArray","length","Error","repository","permissions","default_branch","push","user","forks","hasFork","find","login","per_page","change","VERSION","createPullRequest","bind"],"mappings":"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"}